<?php
require_once('includes/global.inc.php');
require_once('includes/rssreader.php');
require_once('includes/xml_domit/xml_domit_rss_lite.php');


/**
 * Get the sliders from the database for display on the main page
 *  - If there are less than 5 slides, then auto-generate slides try and make 5
 *  - If there are no slides and no auto-generated slides, then show a default slide
 *
 * @return array - the sliders
 */
function getSliders() {
    global $db;

    $curDate = date("Y-m-d");

    $sql = sprintf("SELECT * FROM sliders
                    WHERE ((start_date <= '%s' AND end_date >= '%s') OR (shown=1))
                          AND page = 0
			        ORDER BY weight DESC
			        LIMIT 5", $curDate, $curDate);

    $sliders = $db->GetAll($sql);

    $numSliders = count($sliders);
    if($numSliders < 5) {
        $autoGeneratedSlides = generateFacultySliders(5 - $numSliders);
        $sliders = array_merge($sliders, $autoGeneratedSlides);
    }

    if($numSliders > 0){
        for($i=0; $i<count($sliders); $i++){
            $sliders[$i] = format_slider($sliders[$i]);
        }
    } else {
        // Just in case there are no slides
        $sliders = getDefaultSlide();
    }

    return $sliders;
}

/**
 * Create a default slide for when no sliders exist and there are no auto-generated slide
 *  - This should only happen if no slides are defined and no projects or faculty have a 'descritption_short' defined.
 *
 * @return array - the slide
 */
function getDefaultSlide() {
    $slide = array(
                'heading' => 'Research at MRU',
                'description' => "Research or creative practise are critical components of the post-secondary experience",
                'link' => 'http://research.mtroyal.ca/research.php',
                'shown' => 1,
                'weight' => 1
    );
    $sliders = array();
    $sliders[] = format_slider($slide);

    return $sliders;
}

/**
 * Generate some slides from the projects table
 * - Look for research projects in the 'projects' table that have a 'description_short'
 *
 * @param $numProjects - the number to generate
 * @return array - the project slides
 */
function generateProjectSliders($numProjects) {
    global $db;

    $projectSql = "SELECT p1.project_id, description_short, CONCAT(users.first_name, ' ', users.last_name) as researcher
            FROM projects as p1
            INNER JOIN projects_associated as p2 ON p1.project_id = p2.project_id
            INNER JOIN users ON p2.table_name = 'researchers' AND p2.object_id = users.user_id
            WHERE length(description_short) > 1
            GROUP BY p1.project_id
            ORDER BY RAND()
            LIMIT " . $numProjects;

    $projects = $db->GetAll($projectSql);

    require_once('includes/project_functions.php');

    $slides = array();
    foreach($projects as $project) {
        $picture =  getProjectPictureUrl($project['project_id']);
        $slides[] = array(
            'heading' => $project['researcher'],
            'description' => $project['description_short'],
            'link' => 'http://research.mtroyal.ca/research.php?action=view&type=project&pid=' . $project['project_id'],
            'picture' => $picture ? $picture  : '',
            'shown' => 1,
            'weight' => 1
        );
    }

    return $slides;
}

/**
 * Generate some slides from the users table
 * - Look for profiles in the 'profiles' table that have a 'description_short'
 *
 * @param $numFaculty - the number to generate
 * @return array - the project slides
 */
function generateFacultySliders($numFaculty) {
    global $db;

    $facultySql = "SELECT users.user_id, CONCAT(users.first_name, \" \", users.last_name) AS name, profiles.description_short
                   FROM `users`
                   INNER JOIN profiles ON (users.user_id = profiles.user_id)
                   WHERE length(profiles.description_short) > 1
                   ORDER BY RAND()
                   LIMIT " . $numFaculty;

    $faculty = $db->GetAll($facultySql);

    require_once('includes/user_functions.php');

    $slides = array();
    foreach($faculty as $facultyMember) {
        $picture =  getUserPictureUrl($facultyMember['user_id']);
        $slides[] = array(
            'heading' => $facultyMember['name'],
            'description' => $facultyMember['description_short'],
            'link' => 'http://research.mtroyal.ca/research.php?action=view&type=researchers&rid=' . $facultyMember['user_id'],
            'picture' => $picture ? $picture  : '',
            'shown' => 1,
            'weight' => 1
        );
    }

    return $slides;
}

/**
 * Create the appropriate HTML for slider based on whether it is HTML or an image
 *
 * @param $slider - the sliders data from the database
 * @return array - the HTML for the slider
 */
function format_slider($slider) {

    $sliders = array();
    if(strlen($slider['heading']) > 0) { // html
        $sliders['sliderhtml'] = sprintf("<a href='%s'>
                                            <img src='%s' class='slider-picture' style='display:%s' />
                                            <li class='slider-default'>
                                            <h2>%s</h2>
                                            <p class='description'>%s</p>
                                            </li>
                                          </a>", $slider['link'], $slider['picture'], $slider['picture'] ? 'block' : 'none',
                                                  $slider['heading'], $slider['description']);
    }
    else { // image
        if(strlen($slider['link']) > 0) {
            $sliders['sliderhtml'] = sprintf("<li><a href='%s' onClick=\"_gaq.push(['_trackEvent', 'Sliders', 'Click', '%s']);\"><img src='%s' alt=''></a></li>", $slider['link'], $slider['description'], $slider['imageUrl']);
        } else {
            $sliders['sliderhtml'] = sprintf("<li><img src='%s' alt=''></li>", $slider['imageUrl']);
        }
    }

    return $sliders;
}

function format_event_dates($event){
		if($event["start_date"]){
			$event["start_date"] = date("M j", $event["start_date"]);
		}

		elseif($event["end_date"]){
			$event["end_date"] = date("M j", $event["end_date"]);
		}

		return $event;
}

function getEvents(){
	global $internal,$db;

	$sql = "SELECT * FROM events
            WHERE start_date >= ".time()."
			ORDER BY start_date ASC
			LIMIT 5";

	$events = $db->GetAll($sql);

	if(count($events)>0){
		for($i=0; $i<count($events); $i++){
			$events[$i] = format_event_dates($events[$i]);
		}
	}

	return $events;
}

function getDeadlines() {	//Deadlines & Opportunities
	global $internal,$db;

	/*
	if(isset($internal)) $values = $db->GetAll("SELECT * FROM deadlines as d left join deadline_dates as dd on d.deadline_id=dd.deadline_id WHERE d_date >= $todays_date AND approved='yes' AND internal = 'yes' ORDER BY d_date");
	else $values = $db->GetAll("SELECT * FROM deadlines as d left join deadline_dates as dd on d.deadline_id=dd.deadline_id WHERE d_date >= $todays_date AND approved='yes' AND internal != 'yes' ORDER BY d_date");
	*/
    if(sessionLoggedin()){
            $username=sessionLoggedUser();
            $sql="SELECT * FROM users WHERE username = \"$username\"";
            $user=$db->GetRow($sql);

            if(is_array($user)==false or count($user)==0) {
                displayBlankPage("Error","<h1>Error</h1>There was a database error reading your user record.");
                die;
            }
           $user_topics=array();
           $user_topics_list=$db->GetAll("select topic_id from user_topics_filter where user_id=$user[user_id]");
           //$user_topics=reset($user_topic_list);
           if(is_array($user_topics_list)) $filter="<span style='color:red'>Engaged</span>";
           else $filter="None";
           foreach($user_topics_list as $v) $user_topics[] = $v['topic_id'];
        }
        else $filter = "(No filter)";  // not logged in
      //echo("FILTER: $filter<br>");
    //$tmpl->addVar("FILTERS","FILTER",$filter);


	$sql = "SELECT d.deadline_id, d.title, d.warning_message, d.description,
					d.synopsis, d.topics, d.approved, d.internal, d.override,

					dd.date_id,	dd.d_date, 	dd.close_warning_date,
					dd.early_warning_date, dd.expiry_date, 	dd.days_in_advance

					FROM deadlines d, deadline_dates dd
					WHERE d.deadline_id = dd.deadline_id
					AND dd.d_date >=".time();
	//if(isset($internal)) $sql .= " AND internal = 'yes' ";
	//else $sql .= " AND internal != 'yes' ";
//	$sql.= "AND d.d_date >= ".(time()+24*60*60);
	$sql.= " ORDER BY dd.d_date
					";
	$warning="";


	$deadlines = $db->GetAll($sql);

	if(count($deadlines)>0){
        $deadlines_show=array();
		for($i=0; $i<count($deadlines); $i++){
			if($deadlines[$i]["d_date"])
				$deadlines[$i]["date"] = date("M j", $deadlines[$i]["d_date"]);
             //remove any deadlines not in the filter
             $deadline_topics = explode(",",$deadlines[$i]['topics']);
             if(strlen($deadlines[$i]['synopsis'])>98){
                 $deadlines[$i]['synopsis']=substr($deadlines[$i]['synopsis'],0,96) . '...';
             }
             $show = false;
             if(is_array($user_topics)){
                foreach($user_topics as $user_topic){
                    if(in_array($user_topic,$deadline_topics)) $show=TRUE;
                }
                    //array_walk($user_topics, 'compareArrays', $deadline_topics);
                    //if($show) $deadlines_show[]=$deadlines[$i];
                if($show) $deadlines_show[]=$deadlines[$i];
             }
             else $deadlines_show[]=$deadlines[$i];
		}
	}

	return $deadlines_show;
}

function getGrants() { ///MyGrants

    global $db,$internal;

    $grant_list = array();
    $date = 0;

    if (sessionLoggedin()) {
        $username = sessionLoggedUser();
        $sql = "SELECT * FROM users WHERE username = \"$username\"";
        $user = $db->GetRow($sql);

        if(is_array($user) == false or count($user) == 0) {
            displayBlankPage("Error","<h1>Error</h1>There was a problem finding your user record.");
            die;
        }
        $sql= "SELECT *, oa.id as awardid  FROM ors_project as op join ors_project_users as opu on op.id=opu.ors_project_id join ors_award as oa on op.id=oa.ors_project_id 
                WHERE oa.pi_users_id=$user[user_id]
                   OR op.pi_user_id=$user[user_id]
                   OR opu.users_id=$user[user_id]
                  AND oa.closed_date IS NULL  ";
        $mygrants = $db->GetAll($sql);
        $warning = "";
        $grant = array();
        if (is_array($mygrants)) {
            foreach ($mygrants as $grant) {
                $grant_v=$db->GetAll("SELECT * FROM ors_account_transaction WHERE ors_award_id=$grant[awardid] order by transaction_date");
                $grant_v=reset($grant_v);
                //reset($grant_v);
                if (is_array($grant_v)) {
                    //brought over from orsadmin - project_details_project_funding.php
                    $sql = "
                    SELECT ors_award.*, 
                    (   IFNULL((select sum(amount) from ors_account_transaction where debitcredit='CREDIT' and ors_award_id=ors_award.id and transaction_date <= now()),0)
            -
            IFNULL((select sum(amount) from ors_account_transaction where debitcredit='DEBIT' and ors_award_id=ors_award.id and transaction_date <= now()),0)
            ) as running_total,
            ( IFNULL((SELECT SUM(amount) from ors_account_transaction where ors_disbursement_id IS NOT NULL and ors_award_id=ors_award.id and transaction_date <= now()),0)) 
            as granted
    FROM ors_award
    WHERE id= $grant[awardid]
";
                    $grantdata= $db->GetAll($sql);
                    $grantdata=reset($grantdata);
                    if(is_array($grantdata))
                    //if(is_array($grantdata)) ;
                        
                    $grant["warning"] = $warning;
                    $grant["title"] = $grant['name'];
                    $grant["granted"] = '$'. number_format($grantdata['granted']);
                    $grant["remaining"] = '$' . number_format($grantdata['running_total']);
                    $grant_list[] = $grant;
                }
            }  //foreach
            return $grant_list;
        }   //isarray
    }  //loggedin
}

function getNews() {
	global $db,$internal;
    global $configInfo;
	$news_item=array();
    $todays_date=time();
	$sql="SELECT * FROM news WHERE $todays_date >= post_date AND $todays_date <= expiry_date AND feature=1 ORDER BY RAND()
				LIMIT 3";
//				WHERE news_for=TRUE

	$news=$db->GetAll($sql);
	if($news) {
		foreach ($news as $new) {

			$new['synopsis'] = nl2br($new['synopsis']);
			$news_item["source"]=$new['source'];
			$news_item["title"]=$new['title'];
			$news_item["synopsis"]=$new['synopsis'];
			$news_item["news_id"]=$new['news_id'];

			$sql=" SELECT pictures.file_name,pictures.picture_id
							 FROM pictures,pictures_associated
							WHERE pictures_associated.table_name=\"news\"
								AND object_id=".$new['news_id']."
								AND pictures_associated.picture_id=pictures.picture_id
								AND pictures.feature=FALSE
								ORDER BY RAND()
								LIMIT 1";

			$pictures=$db->GetAll($sql);
			$picture=reset($pictures);
			if($picture){
					$img_url=$configInfo['picture_url']."$picture[file_name]";
					$news_item['img_url'] = $img_url;
			}
            else $news_item['img_url'] = '';


			$news_list[]=$news_item;
		}
	}
	else{
		$news_list[] = array('title'=>"There is currently no news.");
	}

	return $news_list;
}

function getBlog($maxChars=256,$url='http://blogs.mtroyal.ca/research/feed/rss2/', $maxItems=2){
    //$url ='http://blogs.mtroyal.ca/research/feed/rss2/';
    
    //instantiate rss document
    $cacheDir = './';
    $cacheTime = 20;

    $rssdoc = new xml_domit_rss_document_lite($url, $cacheDir, $cacheTime);

    //get total number of channels
    $totalChannels = $rssdoc->getChannelCount();

    //set max Channel
    $maxChannels=1;

    //set max ites per channelh
    //$maxItems=3;

    if($totalChannels < $maxChannels)
    $maxChannels=$totalChannels;

    //loop through each channel
    for ($i = 0; $i < $maxChannels; $i++) {
            //get reference to current channel
            $currChannel =& $rssdoc->getChannel($i);

            //echo channel info
    //        echo "<h2><a href=\"" . $currChannel->getLink() . "\" target=\"_child\">" .
                                                    $currChannel->getTitle() . "</a>";
    //        echo "  " . $currChannel->getDescription() . "</h2>\n\n";

            //get total number of items
            $totalItems = $currChannel->getItemCount();

            //loop through each item or til max intem
            if($totalItems < $maxItems)
            $maxItems=$totalItems;
            for ($j = 0; $j < $maxItems; $j++) {
                    //get reference to current item
                    $currItem =& $currChannel->getItem($j);

                    //echo item info                                  
                    $rss_feed[$j]['link']=$currItem->getLink();
                    $rss_feed[$j]['title']=$currItem->getTitle();
                    $desc=$currItem->getDescription();
                    if(strlen($desc) > $maxChars)   {
                        for($x=$maxChars;$x<=$maxChars+25;$x++){
                            if(substr($desc,$x,1)==" ") break;   
                        }
                        $rss_feed[$j]['description']=substr($desc,0,$x).'<b>...</b>';
                    }
                    else $rss_feed[$j]['description']=$desc;
    //                echo "<p><a href=\"" . $currItem->getLink() . "\" target=\"_child\">" .
    //                                $currItem->getTitle() . "</a> " . $currItem->getDescription() . "</p>\n\n";

            }
    }


    
    /*
	global $rss;

	$url = "http://research.mtroyal.ca/blog/xml-rss2.php";
	$blog_item = array();


	$rss=new rssFeed($url);
	if(!$rss->error){
		$rss->parse();

		if(count($rss->stories)>0){
			$story = $rss->stories[0];

//			echo "<pre>"; print_r($story); echo "</pre>";
			$blog_item["title"] = $story->title;
			if(strlen($story->description)>400)
				$blog_item['synopsis'] = substr($story->description, 0, 397)."...";
			else
				$blog_item['synopsis'] = $story->description;
			$blog_item['link'] = $story->link;
		}

	}
    */
	return $rss_feed;
}

function get_ids(){
    global $db;
    $sql='SELECT * from index_ids';
    $ids=$db->GetAll($sql);
    if($ids) return $ids;
    else return false;

}

function browser() {
    $ua = strtolower($_SERVER['HTTP_USER_AGENT']);
    // you can add different browsers with the same way ..
    if(preg_match('/(chromium)[ \/]([\w.]+)/', $ua))
        $browser = 'chromium';
    elseif(preg_match('/(chrome)[ \/]([\w.]+)/', $ua))
        $browser = 'chrome';
    elseif(preg_match('/(safari)[ \/]([\w.]+)/', $ua))
        $browser = 'safari';
    elseif(preg_match('/(opera)[ \/]([\w.]+)/', $ua))
        $browser = 'opera';
    elseif(preg_match('/(msie)[ \/]([\w.]+)/', $ua))
        $browser = 'msie';
    elseif(preg_match('/(mozilla)[ \/]([\w.]+)/', $ua))
        $browser = 'mozilla';

    preg_match('/('.$browser.')[ \/]([\w]+)/', $ua, $version);

    return array($browser,$version[2], 'name'=>$browser,'version'=>$version[2]);
}

//////////////////////////////////////////////////////////////////////////////////////////////////////

if (sessionLoggedin() == false) {
	//echo ("hi");
    $tmpl = loadPage("index",'VIU Research',"index");
    //print_r($tmpl);

/*    $browser = browser();
    var_dump($browser);
    if($browser['name'] == 'mozilla' && intval($browser['version']) < 5) {
        $tmpl->addRows("sliders", '');
    } else {
        $tmpl->addRows("sliders", getSliders());
    }*/

    //$tmpl->addRows("sliders", getSliders());


   // $tmpl->addRows("articles", getNews());
    $ids = get_ids();
    if ($ids) {
        $tmpl->addVar('PAGE','ID1',$ids[0]['index_id']);
        $tmpl->addVar('PAGE','ID2',$ids[1]['index_id']);
        $tmpl->addVar('PAGE','ID3',$ids[2]['index_id']);
        $tmpl->addVar('PAGE','ID4',$ids[3]['index_id']);
    }
    
  //  $tmpl->addRows("blog",getBlog(120,'http://blogs.mtroyal.ca/orsnewsletter/feed/rss2/',5));
  
  
    $tmpl->addRows("deadlines",getDeadlines());

} 
//////////////////////////////////////////////////////////////////////////////////////////
else {
    $userId = GetVerifyUserId();
    
    $tmpl = loadPage("index_internal","VIU RSAO","index");
    $username=(isset($_SESSION['user_info']['first_name'])) ? $_SESSION['user_info']['first_name'] .' '. $_SESSION['user_info']['last_name'] : '';
    $tmpl->AddVar('PAGE','USERNAME',$username);
    
    //$tmpl->addRows("deadlines",getDeadlines());
    
    
    
 /*   $events=getEvents();
    if(is_array($events))     $tmpl->addRows("events",$events); */
    //$tmpl->addRows("grants",$grants=getGrants());
 /*   $news = getNews();
    for($i=0;$i<count($news);$i++) {
        if (strlen($news[$i]['synopsis']) >= 60) $news[$i]['synopsis'] = substr($news[$i]['synopsis'],0,60) . "...";
    }
    $tmpl->addRows("news",$news); */
    //$tmpl->addRows("blog",getBlog(120,'http://blogs.mtroyal.ca/research/feed/rss2/',3));
    
    
    //$tmpl->addRows("blog",getBlog(120,'http://blogs.mtroyal.ca/orsnewsletter/feed/rss2/',5));
    
    
    
    //Signatures - Dean, Associate Dean, Dir or Chair only.
       
    /**
     * ToDo: Add Associate Dean Role
     * ToDo: Move all this to an include routine and return the numbers. Needed to re-use on main sig page
     */
    $arOptions = array();
    $arOptions['dean_flag'] = (isset($_SESSION['user_info']['dean_flag'])) ? $_SESSION['user_info']['dean_flag'] : false;
    $arOptions['associate_dean_flag'] = (isset($_SESSION['user_info']['associate_dean_flag'])) ? $_SESSION['user_info']['associate_dean_flag'] : false;
    $arOptions['director_flag'] = (isset($_SESSION['user_info']['director_flag'])) ? $_SESSION['user_info']['director_flag'] : false;
    $arOptions['chair_flag'] = (isset($_SESSION['user_info']['chair_flag'])) ? $_SESSION['user_info']['chair_flag'] : false;
    if ($arOptions['dean_flag'] || $arOptions['chair_flag']  || $arOptions['director_flag'] || $arOptions['associate_dean_flag']) {
    
        require_once("includes/ar_review_submit.inc.php");
        $tmpl->addVar('HEADER','ADDITIONAL_HEADER_ITEMS','    <script type="text/javascript" src="' . MRJQUERYPATH . '"></script>');
        
        
        //$tmpl->setAttribute('ar_section','visibility','visible');
        $arStats = GetArStats($arOptions);
        //var_dump($arStats);
        $tmpl->addVars('signatures',$arStats);
       
        $roles=''; $to_view=0; $to_sign=0;   
         
    	//multiple depts
		if($arOptions['chair_flag'] && isset($_SESSION['user_info']['chair_department_id']) && $_SESSION['user_info']['chair_department_id'] != '') {
			$divs=explode(',',$_SESSION['user_info']['chair_department_id']);
			$whereClause= " AND (";
			$count=1;
			foreach($divs as $div){ 
				$whereClause.= " u.department_id = $div ";
				if($count < count($divs)) $whereClause.='OR';
				$count++;
                //And for the display
                $sql="SELECT name FROM departments WHERE department_id=$div";
                $div=$db->getRow($sql);
                if($div) $roles.=" Chair: $div[name]";
                if($count <= count($divs)) $roles.=';';
			}
			$whereClause.=')';
			if($count>2) $plural='s'; else $plural='';
			//Check for sigs and views needed
			//Views first
			 $sql="	SELECT COUNT(ft.form_tracking_id) as num_forms FROM forms_tracking as ft
			 	LEFT JOIN forms_tracking_sigs as sigs using (form_tracking_id)
        		LEFT JOIN users as u using (user_id)
        		LEFT JOIN departments as d on (u.department_id=d.department_id)
        		LEFT JOIN divisions as di on (d.division_id=di.division_id)
        		WHERE
        		ft.status=1
        		AND sigs.chair_action=0
        		AND sigs.chair_sig_id=0
        		$whereClause
        		";
       		//echo $sql;
        	$forms=$db->getAll($sql);
        	//var_dump($forms);
        	if(count($forms)>0) $to_view+=$forms[0]['num_forms'];
        	
        	//Now Sigs
			 $sql="	SELECT COUNT(ft.form_tracking_id) as num_forms FROM forms_tracking as ft
			 	LEFT JOIN forms_tracking_sigs as sigs using (form_tracking_id)
        		LEFT JOIN users as u using (user_id)
        		LEFT JOIN departments as d on (u.department_id=d.department_id)
        		LEFT JOIN divisions as di on (d.division_id=di.division_id)
        		WHERE
        		ft.status=1
        		AND sigs.chair_action=1
        		AND sigs.chair_sig_id=0
        		$whereClause
        		";
       		//echo $sql;
        	$forms=$db->getAll($sql);
        	//var_dump($forms);
        	if(count($forms)>0) $to_sign+=$forms[0]['num_forms'];
			
		}
		
		//multiple depts as director
		if( isset($_SESSION['user_info']['director_department_id']) && $_SESSION['user_info']['director_department_id'] != '') {
			if($roles!='')$roles.=';';
			$divs=explode(',',$_SESSION['user_info']['director_department_id']);
			$whereClause.= " AND (";
			$count=1;
			foreach($divs as $div){ 
				$whereClause.= " u.department_id = $div ";
				if($count < count($divs)) $whereClause.='OR';
				$count++;
                //And for the display
                $sql="SELECT name FROM departments WHERE department_id=$div";
                $div=$db->getRow($sql);
                if($div) $roles.=" Director: $div[name]";
                if($count <= count($divs)) $roles.=';';
			}
			$whereClause.=')';
			if($count>2) $plural='s'; else $plural='';
			
			//Check for sigs and views needed
			//Views first
			 $sql="	SELECT COUNT(ft.form_tracking_id) as num_forms FROM forms_tracking as ft
			 	LEFT JOIN forms_tracking_sigs as sigs using (form_tracking_id)
        		LEFT JOIN users as u using (user_id)
        		LEFT JOIN departments as d on (u.department_id=d.department_id)
        		LEFT JOIN divisions as di on (d.division_id=di.division_id)
        		WHERE
        		ft.status=1
        		AND sigs.dir_action=0
        		AND sigs.dir_sig_id=0
        		$whereClause
        		";
       		//echo $sql;
        	$forms=$db->getAll($sql);
        	//var_dump($forms);
        	if(count($forms)>0) $to_view+=$forms[0]['num_forms'];
        	
        	//Now Sigs
			 $sql="	SELECT COUNT(ft.form_tracking_id) as num_forms FROM forms_tracking as ft
			 	LEFT JOIN forms_tracking_sigs as sigs using (form_tracking_id)
        		LEFT JOIN users as u using (user_id)
        		LEFT JOIN departments as d on (u.department_id=d.department_id)
        		LEFT JOIN divisions as di on (d.division_id=di.division_id)
        		WHERE
        		ft.status=1
        		AND sigs.dir_action=1
        		AND sigs.dir_sig_id=0
        		$whereClause
        		";
       		//echo $sql;
        	$forms=$db->getAll($sql);
        	//var_dump($forms);
        	if(count($forms)>0) $to_sign+=$forms[0]['num_forms'];
		}
		
		// Dean allowing for multiple divisions
		if($arOptions['dean_flag'] && isset($_SESSION['user_info']['dean_division_id']) && $_SESSION['user_info']['dean_division_id'] != '') {
			if($roles!='')$roles.=';';
	    	$divs=explode(',',$_SESSION['user_info']['dean_division_id']);
	    	$whereClause.= " AND (";
	    	$count=1;
	    	foreach($divs as $div){ 
	    		$whereClause.= " di.division_id = $div ";
	    		if($count < count($divs)) $whereClause.='OR';
	    		$count++;
                //And for the display
                $sql="SELECT name FROM divisions WHERE division_id=$div";
                $div=$db->getRow($sql);
                if($div) $roles.=" Dean: $div[name]";
                if($count <= count($divs)) $roles.=';';
	    	}
	    	$whereClause.=')';
	    	if(isset($plural)) $plural='s'; 
	    	elseif($count>2)$plural='s'; else $plural='';
	    	
	    	//Check for sigs and views needed
			//Views first
			 $sql="	SELECT COUNT(ft.form_tracking_id) as num_forms FROM forms_tracking as ft
			 	LEFT JOIN forms_tracking_sigs as sigs using (form_tracking_id)
        		LEFT JOIN users as u using (user_id)
        		LEFT JOIN departments as d on (u.department_id=d.department_id)
        		LEFT JOIN divisions as di on (d.division_id=di.division_id)
        		WHERE
        		ft.status=1
        		AND sigs.dean_action=0
        		AND sigs.dean_sig_id=0
        		$whereClause
        		";
       		//echo $sql;
        	$forms=$db->getAll($sql);
        	//var_dump($forms);
        	if(count($forms)>0) $to_view+=$forms[0]['num_forms'];
        	
        	//Now Sigs
			 $sql="	SELECT COUNT(ft.form_tracking_id) as num_forms FROM forms_tracking as ft
			 	LEFT JOIN forms_tracking_sigs as sigs using (form_tracking_id)
        		LEFT JOIN users as u using (user_id)
        		LEFT JOIN departments as d on (u.department_id=d.department_id)
        		LEFT JOIN divisions as di on (d.division_id=di.division_id)
        		WHERE
        		ft.status=1
        		AND sigs.dean_action=1
        		AND sigs.dean_sig_id=0
        		$whereClause
        		";
       		//echo $sql;
        	$forms=$db->getAll($sql);
        	//var_dump($forms);
        	if(count($forms)>0) $to_sign+=$forms[0]['num_forms'];
        	
	    }
	    
	    //Associate Dean
		if($arOptions['associate_dean_flag'] && isset($_SESSION['user_info']['associate_dean_division_id']) && $_SESSION['user_info']['associate_dean_division_id'] != '') {
			if($roles!='')$roles.=';';
	    	$divs=explode(',',$_SESSION['user_info']['associate_dean_division_id']);
	    	$whereClause.= " AND (";
	    	$count=1;
	    	foreach($divs as $div){ 
	    		$whereClause.= " di.division_id = $div ";
	    		if($count < count($divs)) $whereClause.='OR';
	    		$count++;
                //And for the display
                $sql="SELECT name FROM divisions WHERE division_id=$div";
                $div=$db->getRow($sql);
                if($div) $roles.=" Associate Dean: $div[name]";
                if($count <= count($divs)) $roles.=';';
	    	}
	    	$whereClause.=')';
	    	if(isset($plural)) $plural='s'; 
	    	elseif($count>2)$plural='s'; else $plural='';
	    	
	    	//Check for sigs and views needed
			//Views first
			 $sql="	SELECT COUNT(ft.form_tracking_id) as num_forms FROM forms_tracking as ft
			 	LEFT JOIN forms_tracking_sigs as sigs using (form_tracking_id)
        		LEFT JOIN users as u using (user_id)
        		LEFT JOIN departments as d on (u.department_id=d.department_id)
        		LEFT JOIN divisions as di on (d.division_id=di.division_id)
        		WHERE
        		ft.status=1
        		AND sigs.dean_action=0
        		AND sigs.dean_sig_id=0
        		$whereClause
        		";
       		//echo $sql;
        	$forms=$db->getAll($sql);
        	//var_dump($forms);
        	if(count($forms)>0) $to_view+=$forms[0]['num_forms'];
        	
        	//Now Sigs
			 $sql="	SELECT COUNT(ft.form_tracking_id) as num_forms FROM forms_tracking as ft
			 	LEFT JOIN forms_tracking_sigs as sigs using (form_tracking_id)
        		LEFT JOIN users as u using (user_id)
        		LEFT JOIN departments as d on (u.department_id=d.department_id)
        		LEFT JOIN divisions as di on (d.division_id=di.division_id)
        		WHERE
        		ft.status=1
        		AND sigs.dean_action=1
        		AND sigs.dean_sig_id=0
        		$whereClause
        		";
       		//echo $sql;
        	$forms=$db->getAll($sql);
        	//var_dump($forms);
        	if(count($forms)>0) $to_sign+=$forms[0]['num_forms'];
        	
	    }

    	//Now count everything using the where clause generated above 
        /*
        $sql="	SELECT COUNT(ft.form_tracking_id) as num_forms FROM forms_tracking as ft
        		LEFT JOIN users as u using (user_id)
        		LEFT JOIN departments as d on (u.department_id=d.department_id)
        		LEFT JOIN divisions as di on (d.division_id=di.division_id)
        		WHERE
        		ft.status=1
        		$whereClause
        		";
       //echo $sql;
        $forms=$db->getAll($sql);
        //echo session_encode();
		if($forms) {reset($forms); $num_forms=$forms[0]['num_forms'];}
		else $num_forms=0;
		*/
		//$tmpl->addVar('tfsig_section','num_not_signed',$num_forms);
		//$tmpl->addVar('tfsig_section','role',$arStats['role']);
		
		//$tmpl->setAttribute('signatures','visibility','visible');
		//$tmpl->addVar('signatures','tf_sign',$to_sign);
		//$tmpl->addVar('signatures','tf_view',$to_view);
		
		
        $tmpl->setAttribute('role','visibility','visible');
        $tmpl->addVar('role','roles',$roles);
		if(isset($plural)) $tmpl->addVar('role','plural',$plural);
		
        
    } // if Chair or Dean
    
    
    //tracking forms
    $sql="SELECT COUNT(*) FROM `forms_tracking` WHERE user_id=" .$_SESSION['user_info']['user_id'];
    $result = $db->getRow($sql);
    $tfCount = $result['COUNT(*)'];
    if($tfCount>0){
	    $tmpl->setAttribute('tf_main','visibility','visible');
    	$tmpl->addVar('tf_count', 'COUNT', $tfCount);
    	$tmpl->setAttribute('tf_section','visibility','visible');
    	$tmpl->setAttribute('tf_count','visibility','visible');
    }	

    $tflist=array();
    $sql="SELECT * FROM `forms_tracking` WHERE user_id='".$_SESSION['user_info']['user_id']."' AND (YEAR(`modified`) = YEAR(NOW()) OR YEAR(`modified`) = YEAR(NOW())-1) LIMIT 5";
    //$sql2="SELECT * FROM `forms_tracking` WHERE user_id='".$_SESSION['user_info']['user_id']."' AND `status`=1";
    //echo ($_SESSION[user_info][user_id]);
    //echo $sql;
    $tfs=$db->getAll($sql);
    //var_dump($tfs);
    if($tfs) foreach($tfs as $tf){
    	//Need check to see if Dean Sig required here
    	if(($tf['equipment_flag'] || $tf['space_flag'] || $tf['commitments_flag']) && $tf['status']==1 && !$tf['dean_sig']) $sig_needed=true;
    	else $sig_needed=false;
    	
    	switch($tf['status']){
    		case 0: $status='In Prep';
                break;
    		case 1: 
    			$status='Submitted';
    			break;
    		case 2: $status='Complete';
                break;
    	}
    	$title=substr($tf['tracking_name'],0,50);
    	if(strlen($tf['tracking_name'])>50) $title.='...';
    	$tflist[]= array('title'=>$title,'status'=>$status);
    }
    
    $tmpl->setAttribute('tf_section','visibility','visible');
    $tmpl->addRows('tf_section',$tflist);
    
    
    //irgf forms
    $sql="SELECT COUNT(*) FROM `forms_irgf` WHERE user_id=" .$_SESSION['user_info']['user_id'];
    $result = $db->getRow($sql);
    $igCount = $result['COUNT(*)'];
    if($tfCount>0){
	    $tmpl->setAttribute('irgf_main','visibility','visible');
		$tmpl->addVar('ig_count', 'COUNT', $igCount);    	
		$tmpl->setAttribute('irgf_section','visibility','visible');
    	$tmpl->setAttribute('ig_count','visibility','visible');
    }
    


    $irgflist=array();
    $sql="SELECT * FROM `forms_irgf` WHERE user_id='".$_SESSION['user_info']['user_id']."' AND (YEAR(`modified`) = YEAR(NOW()) OR YEAR(`modified`) = YEAR(NOW())-1)";
    //$sql2="SELECT * FROM `forms_tracking` WHERE user_id='".$_SESSION['user_info']['user_id']."' AND `status`=1";
    //echo ($_SESSION[user_info][user_id]);
    //echo $sql;
    $tfs=$db->getAll($sql);
    //var_dump($tfs);
    if($tfs) foreach($tfs as $tf){
    	//Need check to see if Dean Sig required here
    	//if(($tf['equipment_flag'] || $tf['space_flag'] || $tf['commitments_flag']) && $tf['status']==1 && !$tf['dean_sig']) $sig_needed=true;
    	//else $sig_needed=false;
    	
    	switch($tf['status']){
    		case 0: $status='In Prep'; break;
    		case 1: 
    			//if($sig_needed) $status='Awaiting Dean';
    			//elseif($tf['dean_sig']) $status='Dean Signed';
    			 $status='Submitted'; 
    			
    			break;
    		case 2: $status='Complete'; break;
    	}
    	$title=substr($tf['irgf_name'],0,50);
    	if(strlen($tf['irgf_name'])>50) $title.='...';
    	$irgflist[]= array('title'=>$title,'status'=>$status);
    }
    $tmpl->setAttribute('irgf_section','visibility','visible');
    $tmpl->addRows('irgf_section',$irgflist);

	//CREATE registrations

    $sql="SELECT COUNT(*) FROM `forms_create` WHERE user_id='" .$_SESSION['user_info']['user_id']."'";
    $result = $db->getRow($sql);
    $crCount = $result['COUNT(*)'];
    if($crCount>0){
		$tmpl->addVar('cr_count', 'COUNT', $crCount);   	
		$tmpl->setAttribute('cr_section','visibility','visible');
    	$tmpl->setAttribute('cr_count','visibility','visible');
    }
    
	

    $crlist=array();
    $sql="SELECT * FROM `forms_create` WHERE user_id='".$_SESSION['user_info']['user_id']."' AND (YEAR(`modified`) = YEAR(NOW()) OR YEAR(`modified`) = YEAR(NOW())-1)";
    //$sql2="SELECT * FROM `forms_tracking` WHERE user_id='".$_SESSION['user_info']['user_id']."' AND `status`=1";
    //echo ($_SESSION[user_info][user_id]);
    //echo $sql;
    $crs=$db->getAll($sql);
    //var_dump($tfs);
    if($crs) foreach($crs as $cr){
    	//Need check to see if Dean Sig required here
    	//if(($tf['equipment_flag'] || $tf['space_flag'] || $tf['commitments_flag']) && $tf['status']==1 && !$tf['dean_sig']) $sig_needed=true;
    	//else $sig_needed=false;
    	
    	switch($cr['status']){
    		case 0: $status='In Prep'; break;
    		case 1: 
    			//if($sig_needed) $status='Awaiting Dean';
    			//elseif($tf['dean_sig']) $status='Dean Signed';
    			 $status='Submitted'; 
    			
    			break;
    		case 2: $status='Complete'; break;
    	}
    	$title=substr($cr['create_name'],0,50);
    	if(strlen($cr['create_name'])>50) $title.='...';
    	$crlist[]= array('title'=>$title,'status'=>$status);
    }
    $tmpl->setAttribute('cr_main','visibility','visible');
    $tmpl->setAttribute('cr_section','visibility','visible');
    $tmpl->addRows('cr_section',$crlist);



    

}
$tmpl->displayParsedTemplate();

if (MRCDEBUG) {
    PrintR(GetPersonData($userId));
   // PrintR($_SESSION);
} // if

/*
$sql="SELECT news_id, source, title, synopsis
	  FROM news
	  WHERE post_date
	  ORDER BY rand()
	  LIMIT 3";


$news=$db->GetAll($sql);
if($news) {
	foreach($news as $k=>$v) {
		if($news[$k]["title"]!="") $news[$k]["title"]="<b>".$news[$k]["title"]."</b><br />";
		if($news[$k]["source"]!="") $news[$k]["source"]="<small>(<i>source: ".$news[$k]["source"]."</i>)</small><br />";
	}
	$tmpl->addRows('articles', $news);
}

$tmpl->displayParsedTemplate('page');

*/
?>
